{"version":3,"sources":["firebase/config.js","components/SignUp.js","components/SignIn.js","providers/userProvider.js","components/PasswordReset.js","components/title.js","components/search.js","components/modal.js","components/homePage.js","components/Application.js","components/globalStyles.js","components/Theme.js","App.js","components/useDarkMode.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectFireStore","auth","provider","FieldValue","serverTimestamp","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","SignUp","useState","setEmail","password","setPassword","setDisplayName","setError","loadingOne","setLoadingOne","loadingTwo","setLoadingTwo","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobileDevice","createUserWithEmailAndPasswordHandler","event","preventDefault","log","createUserWithEmailAndPassword","onChangeHandler","currentTarget","name","value","className","style","marginTop","noValidate","fontSize","fontWeight","letterSpacing","class","for","id","type","placeholder","onChange","color","backgroundColor","onClick","disabled","to","process","SignIn","errorEmpty","setErrorEmpty","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","catch","required","role","aria-hidden","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","Provider","this","props","children","Component","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","sendResetEmail","sendPasswordResetEmail","then","setTimeout","useStyles","makeStyles","theme","root","margin","spacing","pink","palette","getContrastText","purple","deepPurple","Title","userName","darkModeToggle","classes","marginBottom","position","display","IconButton","border","outline","data-toggle","aria-haspopup","aria-expanded","Avatar","alt","toUpperCase","aria-labelledby","href","signOut","Search","term","e","setTerm","target","onKeyPress","key","search","Modal","selectedImg","setSelectedImg","div","initial","opacity","animate","img","src","y","url","HomePage","useContext","page","setPage","setLoading","images","setImages","useEffect","fetch","res","json","results","err","Image","image","links","html","urls","regular","dataLength","length","next","concat","hasMore","loader","overflow","map","index","tags","tag","title","small","flexWrap","Application","toggle","basepath","path","GlobalStyles","createGlobalStyle","body","text","signInWithGoogleColor","formColor","tagText","signInColor","primary","borderColor","searchBar","searchBorder","heading","lightTheme","toggleBorder","background","secondary","darkTheme","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mUA2BAA,gBAZuB,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YACE,+EACFC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAMqBP,YAAvB,IACMQ,EAAmBR,cACnBS,EAAOT,SAGdU,GAFmBV,YAAmBW,WAAWC,gBAEtC,IAAIZ,OAAca,oBAEtBC,EAAmB,WAC9BL,EAAKM,gBAAgBL,IAGVM,EAAoB,uCAAG,WAAOC,EAAMC,GAAb,qBAAAC,EAAA,yDAC7BF,EAD6B,wDAE5BG,EAAUZ,EAAiBa,IAAjB,gBAA8BJ,EAAKK,MAFjB,SAGXF,EAAQG,MAHG,iBAIpBC,OAJoB,wBAKxBC,EAAiCR,EAAjCQ,MAAOC,EAA0BT,EAA1BS,YAAaC,EAAaV,EAAbU,SALI,mBAOxBP,EAAQQ,IAAR,aACJF,cACAD,QACAE,YACGT,IAXyB,0DAc9BW,QAAQC,MAAM,+BAAd,MAd8B,iCAiB3BC,EAAgBd,EAAKK,MAjBM,0DAAH,wDAoB3BS,EAAe,uCAAG,WAAOT,GAAP,eAAAH,EAAA,yDACjBG,EADiB,yCACL,MADK,gCAGOd,EAAiBa,IAAjB,gBAA8BC,IAAOC,MAH5C,cAGdS,EAHc,sCAKlBV,OACGU,EAAaC,SANE,gCASpBJ,QAAQC,MAAM,sBAAd,MAToB,yDAAH,sD,gBC0XNI,EA/aA,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZV,EADY,KACLW,EADK,OAEaD,mBAAS,IAFtB,mBAEZE,EAFY,KAEFC,EAFE,OAGmBH,mBAAS,IAH5B,mBAGZT,EAHY,KAGCa,EAHD,OAIOJ,mBAAS,MAJhB,mBAIZL,EAJY,KAILU,EAJK,OAKiBL,oBAAS,GAL1B,mBAKZM,EALY,KAKAC,EALA,OAMiBP,oBAAS,GAN1B,mBAMZQ,EANY,KAMAC,EANA,KAQbC,EAAoBC,wBAAc,CACtCC,MAAO,+BAGHC,EAAyBF,wBAAc,CAC3CC,MAAO,+BAGHE,EAAqC,uCAAG,WAC5CC,EACAzB,EACAY,GAH4C,iBAAAlB,EAAA,6DAK5C+B,EAAMC,iBACNtB,QAAQuB,IAAIX,GANgC,SAQ1CC,GAAc,GAR4B,SASnBjC,EAAK4C,+BAC1B5B,EACAY,GAXwC,gBASlCpB,EATkC,EASlCA,KAIRD,EAAqBC,EAAM,CAAES,gBAba,kDAiB1Cc,EAAS,4CACTX,QAAQuB,IAAR,MACAV,GAAc,GAnB4B,QAsB5CN,EAAS,IACTE,EAAY,IACZC,EAAe,IAxB6B,0DAAH,0DA2BrCe,EAAkB,SAACJ,GAAW,IAAD,EACTA,EAAMK,cAAtBC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MACD,cAATD,EACFpB,EAASqB,GACS,iBAATD,EACTlB,EAAYmB,GACM,gBAATD,GACTjB,EAAekB,IAInB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,mBACZV,GACC,oCACE,yBACEW,MAAO,CAAEC,UAAW,QACpBF,UAAU,iDAEV,0BAAMA,UAAU,YAAYG,YAAU,GACpC,yBACEF,MAAO,CACLG,SAAU,OACVC,WAAY,MACZC,cAAe,OAEjBN,UAAU,2BANZ,WAUA,yBAAKO,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,eAFN,gBAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,OACLC,YAAY,eACZb,KAAK,cACLS,MAAM,eACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEqC,GAAG,cACHC,KAAK,OACLC,YAAY,eACZb,KAAK,cACLS,MAAM,0BACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,sBAFN,iBAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,QACLC,YAAY,yBACZb,KAAK,YACLS,MAAM,eACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEsC,KAAK,QACLC,YAAY,yBACZb,KAAK,YACLS,MAAM,0BACNE,GAAG,qBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,yBAFN,YAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,WACLH,MAAM,eACNT,KAAK,eACLa,YAAY,gBACZC,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEsC,KAAK,WACLH,MAAM,0BACNT,KAAK,eACLa,YAAY,gBACZF,GAAG,wBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,yBACEqC,GAAG,wBACHT,UAAU,oBAFZ,gCAQFjB,GACA,4BACE0B,GAAG,SACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCJ,KAAK,SACLV,UAAU,uBACVe,QAAS,SAACvB,GACRD,EACEC,EACAzB,EACAY,KATN,WAgBDI,GACC,4BACE2B,KAAK,SACLV,UAAU,uBACVC,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5CG,UAAQ,GAJV,cAUF,yBAAKhB,UAAU,eAAf,OAEEf,GACA,4BACEwB,GAAG,mBACHC,KAAK,SACLT,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCd,UAAU,uBACVe,QAAS,WACP,IACE7B,GAAc,GACd9B,IAEA,MAAOgB,GACPD,QAAQC,MAAM,+BAAgCA,GAC9Cc,GAAc,MAZpB,sBAiBE,uBAAGqB,MAAM,wBAIZtB,GACC,4BACEyB,KAAK,SACLT,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5Cb,UAAU,uBACVgB,UAAQ,GAJV,cAWF,uBAAGhB,UAAU,oBAAb,2BAC2B,IACzB,kBAAC,IAAD,CAAMiB,GAAIC,GAAwBlB,UAAU,gBAA5C,gBAEQ,IACR,6BAAO,QAOhBb,GACC,oCACE,yBACEc,MAAO,CAAEC,UAAW,QACpBF,UAAU,wDAEV,0BAAMA,UAAU,YAAYG,YAAU,GACpC,yBACEF,MAAO,CACLG,SAAU,OACVC,WAAY,MACZC,cAAe,OAEjBN,UAAU,2BANZ,WAUA,yBAAKO,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,eAFN,gBAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,OACLC,YAAY,eACZb,KAAK,cACLS,MAAM,eACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEqC,GAAG,cACHC,KAAK,OACLC,YAAY,eACZb,KAAK,cACLS,MAAM,0BACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,sBAFN,iBAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,QACLC,YAAY,yBACZb,KAAK,YACLS,MAAM,eACNK,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEsC,KAAK,QACLC,YAAY,yBACZb,KAAK,YACLS,MAAM,0BACNE,GAAG,qBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEG,SAAU,OAAQC,WAAY,OACvCG,IAAI,yBAFN,YAMW,OAAVpC,GACC,2BACEqC,GAAG,UACHC,KAAK,WACLH,MAAM,eACNT,KAAK,eACLa,YAAY,gBACZC,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,2BACEsC,KAAK,WACLH,MAAM,0BACNT,KAAK,eACLa,YAAY,gBACZF,GAAG,wBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,yBACEqC,GAAG,wBACHT,UAAU,oBAFZ,gCAQFjB,GACA,4BACE0B,GAAG,SACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCJ,KAAK,SACLV,UAAU,uBACVe,QAAS,SAACvB,GACRD,EACEC,EACAzB,EACAY,KATN,WAgBDI,GACC,4BACE2B,KAAK,SACLV,UAAU,uBACVC,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5CG,UAAQ,GAJV,cAUF,yBAAKhB,UAAU,eAAf,OAEEf,GACA,4BACEwB,GAAG,mBACHC,KAAK,SACLT,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCd,UAAU,uBACVe,QAAS,WACP,IACE7B,GAAc,GACd9B,IAEA,MAAOgB,GACPD,QAAQC,MAAM,+BAAgCA,GAC9Cc,GAAc,MAZpB,sBAiBE,uBAAGqB,MAAM,wBAIZtB,GACC,4BACEyB,KAAK,SACLT,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5Cb,UAAU,uBACVgB,UAAQ,GAJV,cAWF,uBAAGhB,UAAU,oBAAb,2BAC2B,IACzB,kBAAC,IAAD,CAAMiB,GAAIC,GAAwBlB,UAAU,gBAA5C,gBAEQ,IACR,6BAAO,WCvCVmB,EA7XA,WAAO,IAAD,EACO1C,mBAAS,IADhB,mBACZV,EADY,KACLW,EADK,OAEaD,mBAAS,IAFtB,mBAEZE,EAFY,KAEFC,EAFE,OAGOH,mBAAS,MAHhB,mBAGZL,EAHY,KAGLU,EAHK,OAIiBL,mBAAS,MAJ1B,mBAIZ2C,EAJY,KAIAC,EAJA,OAKiB5C,oBAAS,GAL1B,mBAKZM,EALY,KAKAC,EALA,OAMiBP,oBAAS,GAN1B,mBAMZQ,EANY,KAMAC,EANA,KAQbC,EAAoBC,wBAAc,CACtCC,MAAO,+BAGHC,EAAyBF,wBAAc,CAC3CC,MAAO,+BAGHiC,EAAoC,SAAC9B,EAAOzB,EAAOY,GACvDa,EAAMC,iBACNT,GAAc,GACdjC,EAAKwE,2BAA2BxD,EAAOY,GAAU6C,OAAM,SAACpD,GACtDY,GAAc,GACA,KAAVjB,GAA6B,KAAbY,GAClB0C,EAAc,8BACdlD,QAAQC,MAAM,2CAA4CA,KAEtDgD,GACFC,EAAc,MAEhBvC,EAAS,4CACTX,QAAQC,MAAM,2CAA4CA,QAK1DwB,EAAkB,SAACJ,GAAW,IAAD,EACTA,EAAMK,cAAtBC,EADyB,EACzBA,KAAMC,EADmB,EACnBA,MAED,cAATD,EACFpB,EAASqB,GACS,iBAATD,GACTlB,EAAYmB,IAIhB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,mBACZV,GACC,oCACE,yBACEW,MAAO,CAAEC,UAAW,QACpBF,UAAU,iDAEV,0BAAMA,UAAU,YAAYG,YAAU,GACpC,yBACEF,MAAO,CACLG,SAAU,OACVC,WAAY,MACZC,cAAe,OAEjBN,UAAU,2BANZ,WAUA,yBAAKA,UAAU,mBACb,2BACEC,MAAO,CAAEI,WAAY,MAAOD,SAAU,QACtCI,IAAI,sBAFN,iBAMW,OAAVpC,GAAiC,OAAfgD,GACjB,2BACEV,KAAK,QACLD,GAAG,UACHX,KAAK,YACLa,YAAY,yBACZX,UAAU,eACVY,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAGvCpB,GAASgD,IACT,2BACEV,KAAK,QACLZ,KAAK,YACLa,YAAY,yBACZX,UAAU,0BACVS,GAAG,qBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEI,WAAY,MAAOD,SAAU,QACtCI,IAAI,yBAFN,YAMW,OAAVpC,GAAiC,OAAfgD,GACjB,2BACEV,KAAK,WACLD,GAAG,UACHX,KAAK,eACLE,UAAU,eACVW,YAAY,gBACZc,UAAQ,EACRb,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAGvCpB,GAASgD,IACT,2BACEV,KAAK,WACLZ,KAAK,eACLE,UAAU,0BACVW,YAAY,gBACZF,GAAG,wBACHgB,UAAQ,EACRb,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,yBACEqC,GAAG,wBACHT,UAAU,oBAFZ,gCAODoB,GACC,yBACEX,GAAG,wBACHT,UAAU,oBAFZ,gCAQFjB,GACA,4BACE0B,GAAG,SACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCJ,KAAK,SACLV,UAAU,uBACVe,QAAS,SAACvB,GACR8B,EAAkC9B,EAAOzB,EAAOY,KANpD,WAYDI,GACC,4BACEkB,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5CH,KAAK,SACLV,UAAU,uBACVgB,UAAQ,GAJV,cAUF,yBAAKhB,UAAU,eAAf,OACEf,GACA,4BACEyB,KAAK,SACLD,GAAG,eACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCd,UAAU,uBACVe,QAAS,WACP,IACE7B,GAAc,GACd9B,IACA,MAAOgB,GACPD,QAAQC,MAAM,+BAAgCA,GAC9Cc,GAAc,MAXpB,sBAgBE,uBAAGqB,MAAM,wBAGZtB,GACC,4BACEgB,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5Cb,UAAU,uBACVgB,UAAQ,GAER,0BACEhB,UAAU,oCACV0B,KAAK,SACLC,cAAY,SARhB,cAaF,uBAAG3B,UAAU,oBAAb,yBACyB,IACvB,kBAAC,IAAD,CAAMiB,GAAG,SAASjB,UAAU,gBAA5B,gBAEQ,IACR,6BAAO,IACP,kBAAC,IAAD,CAAMiB,GAAG,gBAAgBjB,UAAU,gBAAnC,wBASTb,GACC,oCACE,yBACEc,MAAO,CAAEC,UAAW,QACpBF,UAAU,wDAEV,0BAAMA,UAAU,YAAYG,YAAU,GACpC,yBACEF,MAAO,CACLG,SAAU,OACVC,WAAY,MACZC,cAAe,OAEjBN,UAAU,2BANZ,WAUA,yBAAKA,UAAU,mBACb,2BACEC,MAAO,CAAEI,WAAY,MAAOD,SAAU,QACtCI,IAAI,sBAFN,iBAMW,OAAVpC,GAAiC,OAAfgD,GACjB,2BACEV,KAAK,QACLD,GAAG,UACHX,KAAK,YACLa,YAAY,yBACZX,UAAU,eACVY,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAGvCpB,GAASgD,IACT,2BACEV,KAAK,QACLZ,KAAK,YACLa,YAAY,yBACZX,UAAU,0BACVS,GAAG,qBACHG,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAI3C,yBAAKe,MAAM,mBACT,2BACEN,MAAO,CAAEI,WAAY,MAAOD,SAAU,QACtCI,IAAI,yBAFN,YAMW,OAAVpC,GAAiC,OAAfgD,GACjB,2BACEV,KAAK,WACLD,GAAG,UACHX,KAAK,eACLE,UAAU,eACVW,YAAY,gBACZc,UAAQ,EACRb,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,OAGvCpB,GAASgD,IACT,2BACEV,KAAK,WACLZ,KAAK,eACLE,UAAU,0BACVW,YAAY,gBACZF,GAAG,wBACHgB,UAAQ,EACRb,SAAU,SAACpB,GAAD,OAAWI,EAAgBJ,MAGxCpB,GACC,yBACEqC,GAAG,wBACHT,UAAU,oBAFZ,gCAODoB,GACC,yBACEX,GAAG,wBACHT,UAAU,oBAFZ,gCAQFjB,GACA,4BACE0B,GAAG,SACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCJ,KAAK,SACLV,UAAU,uBACVe,QAAS,SAACvB,GACR8B,EAAkC9B,EAAOzB,EAAOY,KANpD,WAYDI,GACC,4BACEkB,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5CH,KAAK,SACLV,UAAU,uBACVgB,UAAQ,GAJV,cAUF,yBAAKhB,UAAU,eAAf,OACEf,GACA,4BACEyB,KAAK,SACLD,GAAG,eACHR,MAAO,CAAEY,MAAO,OAAQC,gBAAiB,WACzCd,UAAU,uBACVe,QAAS,WACP,IACE7B,GAAc,GACd9B,IACA,MAAOgB,GACPD,QAAQC,MAAM,+BAAgCA,GAC9Cc,GAAc,MAXpB,sBAgBE,uBAAGqB,MAAM,wBAGZtB,GACC,4BACEgB,MAAO,CAAEa,gBAAiB,UAAWD,MAAO,QAC5Cb,UAAU,uBACVgB,UAAQ,GAER,0BACEhB,UAAU,oCACV0B,KAAK,SACLC,cAAY,SARhB,cAaF,uBAAG3B,UAAU,oBAAb,yBACyB,IACvB,kBAAC,IAAD,CAAMiB,GAAG,SAASjB,UAAU,gBAA5B,gBAEQ,IACR,6BAAO,IACP,kBAAC,IAAD,CAAMiB,GAAG,gBAAgBjB,UAAU,gBAAnC,2B,gCCnXL4B,EAAcC,wBAAc,CAAEtE,KAAM,OAyBlCuE,E,4MArBXC,MAAQ,CACJxE,KAAM,M,EAIRyE,kB,sBAAoB,sBAAAvE,EAAA,sDAClBV,EAAKkF,mBAAL,+BAAAxE,EAAA,MAAwB,WAAMyE,GAAN,eAAAzE,EAAA,sEACHH,EAAqB4E,GADlB,OAChB3E,EADgB,OAEtB,EAAK4E,SAAS,CAAE5E,SAFM,2CAAxB,uDADkB,2C,uDAQlB,OACA,kBAACqE,EAAYQ,SAAb,CAAsBrC,MAAOsC,KAAKN,MAAMxE,MACnC8E,KAAKC,MAAMC,c,GAhBGC,aCmFRC,EAlFG,WAAM,IAAD,EAEGhE,mBAAS,IAFZ,mBAEhBV,EAFgB,KAETW,EAFS,OAGyBD,oBAAS,GAHlC,mBAGhBiE,EAHgB,KAGEC,EAHF,OAIKlE,mBAAS,MAJd,mBAIfL,EAJe,KAIRU,EAJQ,OAKeL,mBAAS,MALxB,mBAKf2C,EALe,KAOjBjC,GAPiB,KAOGC,wBAAc,CACpCC,MAAO,gCAGHC,EAAyBF,wBAAc,CAC3CC,MAAO,+BAGLO,EAAkB,SAAAJ,GAAU,IAAD,EACLA,EAAMK,cAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAED,cAATD,GACFpB,EAASqB,IAIT6C,EAAiB,SAAApD,GACnBA,EAAMC,iBACN1C,EACC8F,uBAAuB9E,GACvB+E,MAAK,WACFH,GAAoB,GACpBI,YAAW,WAAOJ,GAAoB,KAAS,QAElDnB,OAAM,WACH1C,EAAS,gCAKjB,OACI,yBAAKkB,UAAU,iBACX,yBAAKA,UAAU,mBACVV,GAA0B,oCAAE,yBAAKW,MAAO,CAACC,UAAU,QAASF,UAAW,iDACpE,0BAAMA,UAAU,YAAYG,YAAU,GACtC,yBAAKF,MAAO,CAACG,SAAS,OAAOC,WAAW,OAAQL,UAAU,2BAA1D,uBACI,yBAAKA,UAAU,mBACX,2BAAOC,MAAO,CAACI,WAAW,MAAOD,SAAS,QAASI,IAAI,sBAAvD,SACU,OAARpC,GAA2B,OAAbgD,GAAsB,2BAAOV,KAAK,QAAQD,GAAG,UAAUX,KAAK,YAAYa,YAAY,2BAA2BX,UAAU,eAAeY,SAAU,SAAApB,GAAK,OAAII,EAAgBJ,OACzLpB,GAASgD,IAAe,2BAAOV,KAAK,QAAQZ,KAAK,YAAYa,YAAY,yBAAyBX,UAAU,0BAA0BS,GAAG,qBAAqBG,SAAU,SAAApB,GAAK,OAAII,EAAgBJ,OAEvM,4BAAQiB,GAAG,sBAAsBR,MAAO,CAACY,MAAM,OAAQC,gBAAgB,WAAYJ,KAAK,SAASV,UAAU,uBAAuBe,QAAS,SAAAvB,GAAUoD,EAAepD,KAApK,wBACA,uBAAGQ,UAAU,oBACT,kBAAC,IAAD,CAAMiB,GAAIC,GAAwBlB,UAAU,gBAA5C,+BAEQ,QAIfb,GAAqB,oCAAE,yBAAKc,MAAO,CAACC,UAAU,QAASF,UAAW,wDACnE,0BAAMA,UAAU,YAAYG,YAAU,GACtC,yBAAKF,MAAO,CAACG,SAAS,OAAOC,WAAW,OAAQL,UAAU,2BAA1D,uBACI,yBAAKA,UAAU,mBACX,2BAAOC,MAAO,CAACI,WAAW,MAAOD,SAAS,QAASI,IAAI,sBAAvD,SACU,OAARpC,GAA2B,OAAbgD,GAAsB,2BAAOV,KAAK,QAAQD,GAAG,UAAUX,KAAK,YAAYa,YAAY,2BAA2BX,UAAU,eAAeY,SAAU,SAAApB,GAAK,OAAII,EAAgBJ,OACzLpB,GAASgD,IAAe,2BAAOV,KAAK,QAAQZ,KAAK,YAAYa,YAAY,yBAAyBX,UAAU,0BAA0BS,GAAG,qBAAqBG,SAAU,SAAApB,GAAK,OAAII,EAAgBJ,OAEvM,4BAAQiB,GAAG,sBAAsBR,MAAO,CAACY,MAAM,OAAQC,gBAAgB,WAAYJ,KAAK,SAASV,UAAU,uBAAuBe,QAAS,SAAAvB,GAAUoD,EAAepD,KAApK,wBACA,uBAAGQ,UAAU,oBACT,kBAAC,IAAD,CAAMiB,GAAIC,GAAwBlB,UAAU,gBAA5C,+BAEQ,QAIf0C,GAAoB,yBAAK1C,UAAU,iCAChC,yBAAKO,MAAM,8CAA8CmB,KAAK,SAA9D,sC,8ECzElBsB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1BC,KAAM,CACJzC,MAAOqC,EAAMK,QAAQC,gBAAgBF,IAAK,MAC1CxC,gBAAiBwC,IAAK,MAGxBG,OAAQ,CACN5C,MAAOqC,EAAMK,QAAQC,gBAAgBE,IAAW,MAChD5C,gBAAiB4C,IAAW,UAIjB,SAASC,EAAT,GAA2D,IAA1CC,EAAyC,EAAzCA,SAAU7G,EAA+B,EAA/BA,KAAM8G,EAAyB,EAAzBA,eAAgBX,EAAS,EAATA,MACxDY,EAAUd,IADuD,EAEzCvE,oBAAS,GAFgC,6BAevE,OACE,yBAAKuB,UAAU,SACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,mBACb,uCACA,yBAAKC,MAAO,CAAEC,UAAW,QAAUF,UAAU,gBAI3C,yBAAKC,MAAO,CAAE8D,aAAc,SAK1B,yBACE9D,MAAO,CACL+D,SAAU,WACVC,QAAS,eACT/D,UAAW,SAGb,kBAACgE,EAAA,EAAD,CACEjE,MAAO,CAAEkE,OAAQ,OAAQC,QAAS,QAClCrD,QAAS,WAjCvB8C,MAmCyB,SAAVX,GACC,kBAAC,IAAD,CACE9C,SAAS,QACTH,MAAO,CAAEY,MAAO,UAGT,UAAVqC,GACC,kBAAC,IAAD,CACE9C,SAAS,QACTH,MAAO,CAAEY,MAAO,gBAM1B,yBAAKZ,MAAO,CAAE8D,aAAc,SAC1B,uBACE/D,UAAU,oBACVS,GAAG,yBACH4D,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdtE,MAAO,CAAEG,SAAU,UAER,UAAV8C,GACC,kBAACsB,EAAA,EAAD,CAAQxE,UAAW8D,EAAQR,KAAMmB,IAAKb,GACnCA,EAAS,GAAGc,eAGN,SAAVxB,GACC,kBAACsB,EAAA,EAAD,CAAQxE,UAAW8D,EAAQL,OAAQgB,IAAKb,GACrCA,EAAS,GAAGc,gBAInB,yBACEnE,MAAM,oCACNoE,kBAAgB,0BAGhB,uBACEpE,MAAM,gBACNqE,KAAK,IACL7D,QAAS,WACPhE,EAAK8H,YAJT,iBAcI,OAAbjB,GAAqB,wCAAcA,GACtB,OAAbA,GAAqB,uCACtB,kECvHN,IAuBekB,EAvBA,SAAC,GAAa,IAAZxC,EAAW,EAAXA,MAQb,OACI,yBAAKrC,MAAO,CAAC8D,aAAa,QAAS/D,UAAU,0BACzC,2BACIS,GAAG,SACHT,UAAU,+BACVU,KAAK,OACLC,YAAY,mBACZZ,MAAOuC,EAAMyC,KACbnE,SAAU,SAAAoE,GAAC,OAAI1C,EAAM2C,QAAQD,EAAEE,OAAOnF,QACtCoF,WAfS,SAACH,GACP,UAARA,EAAEI,KAAiC,IAAhBJ,EAAEE,OAAOnF,OAC3BuC,EAAM+C,c,QCgBHC,EAnBD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAM3B,OACC,kBAAC,IAAOC,IAAR,CAAYzF,UAAU,WAAWe,QALb,SAACiE,GACjBQ,EAAe,OAKfE,QAAS,CAACC,QAAQ,GAClBC,QAAS,CAACD,QAAQ,IAElB,kBAAC,IAAOE,IAAR,CAAYC,IAAKP,EAAad,IAAI,eAClCiB,QAAS,CAACK,EAAE,UACZH,QAAS,CAACG,EAAE,O,QCEdC,EAAM,4BAiOGC,MA9Nf,YAA8C,IAA1BpC,EAAyB,EAAzBA,eAAgBX,EAAS,EAATA,MAE5B3F,EAAO2I,qBAAWtE,GAEN5D,GAAuBT,EAAjCU,SAAiCV,EAAvBS,aAEZmB,GAFmC5B,EAAVQ,MAELqB,wBAAc,CACtCC,MAAO,gCAGHC,EAAyBF,wBAAc,CAC3CC,MAAO,+BAKH+F,EAAM,8CAhB+B,EAkBnB3G,mBAAS,GAlBU,mBAkBpC0H,EAlBoC,KAkB9BC,EAlB8B,OAmBb3H,oBAAS,GAnBI,mBAmB3B4H,GAnB2B,aAoBL5H,mBAAS,MApBJ,mBAoBpC8G,EApBoC,KAoBvBC,EApBuB,OAqBjB/G,oBAAS,GArBQ,mBAqBpCL,EArBoC,aAsBfK,mBAAS,KAtBM,mBAsBpC6H,EAtBoC,KAsB5BC,EAtB4B,OAuBnB9H,mBAAS,IAvBU,mBAuBpCsG,EAvBoC,KAuB9BE,EAvB8B,KAiD3CuB,qBAAU,WACRH,GAAW,GACXI,MAAM,GAAD,OAAIT,EAAJ,oCAAmCZ,EAAnC,gBACFtC,MAAK,SAAA4D,GAAG,OAAIA,EAAIC,UAChB7D,MAAK,SAAAvE,GACJJ,QAAQuB,IAAInB,GAEZgI,EAAUhI,EAAKqI,SACfP,GAAW,MAEZvD,MAAK,SAAA+D,GACJ1I,QAAQuB,IAAImH,GAEZR,GAAW,QAEd,IAEH,IAAMhB,EAAM,uCAAG,8BAAA5H,EAAA,6DACb2I,EAAQ,GADK,SAGXC,GAAW,GAHA,SAIKI,MAAM,GAAD,OAAIT,EAAJ,oCAAmCZ,EAAnC,kBAAgDL,IAJ1D,cAIP2B,EAJO,gBAKMA,EAAIC,OALV,OAKPpI,EALO,OAMXJ,QAAQuB,IAAInB,GACZgI,EAAUhI,EAAKqI,SACfP,GAAW,GARA,kDAYXlI,QAAQuB,IAAR,MACA2G,GAAW,GAbA,0DAAH,qDAyBNS,EAAQ,SAAC,GAAc,IAAbC,EAAY,EAAZA,MACd,OACE,yBAAK/G,UAAU,WACZ,uBAAG4E,KAAMmC,EAAMC,MAAMC,KAAM/B,OAAO,UAChC,yBAAKlF,UAAU,oBACf,yBAAKA,UAAU,gBAAgB8F,IAAKiB,EAAMG,KAAKC,UAC/C,yBAAK5G,MAAM,iCAEV,uBAAGA,MAAM,gBAAT,YAAkCwG,EAAMxJ,KAAKuC,KAA7C,oBAeV,OACE,yBAAKE,UAAU,OACb,kBAAC2D,EAAD,CAAOC,SAAY5F,EAAajB,KAAMA,EAAM8G,eAAkBA,EAAgBX,MAAOA,IACrF,kBAAC,EAAD,CAAQZ,MAAO,CACbyC,KAAMA,EACNM,OAAQA,EACRJ,QAASA,KAEV7G,GAAS,yBAAK4B,UAAU,SAAf,+BAGR,kBAAC,IAAD,CACAoH,WAAcd,EAAOe,OACrBC,KAtGc,WAClBlB,EAAQD,EAAK,GACD,KAATpB,GACDsB,GAAW,GACXI,MAAM,GAAD,OAAIT,EAAJ,oCAAmCZ,EAAnC,4BAA0De,IAC9DrD,MAAK,SAAA4D,GAAG,OAAIA,EAAIC,UAChB7D,MAAK,SAAAvE,GACJJ,QAAQuB,IAAInB,GACZgI,EAAUD,EAAOiB,OAAOhJ,EAAKqI,UAC7BP,GAAW,QAIbA,GAAW,GACXI,MAAM,GAAD,OAAIT,EAAJ,mCAAkCZ,EAAlC,kBAA+CL,EAA/C,iBAA4DoB,IAChErD,MAAK,SAAA4D,GAAG,OAAIA,EAAIC,UAChB7D,MAAK,SAAAvE,GACJJ,QAAQuB,IAAInB,GACZgI,EAAUD,EAAOiB,OAAOhJ,EAAKqI,UAC7BP,GAAW,QAoFXmB,SAAW,EACXC,OACE,+BAGA,yBAAKzH,UAAU,uBAAuBC,MAAO,CAACyH,SAAS,SAExDvI,GAAqB,wCAAG,yBAAKa,UAAU,gBACrCsG,EAAOqB,KAAI,SAACZ,EAAOa,GAAR,OACV,uBAAGhD,KAAMmC,EAAMC,MAAMC,KAAM/B,OAAO,UAChC,4BAAQ3E,MAAM,UAEd,kBAACuG,EAAD,CAAOC,MAAOA,IACbA,EAAMc,MAAQ,gCAAYtH,MAAM,wEAC9BwG,EAAMc,KAAKF,KAAI,SAACG,GAAD,OACd,0BAAM9H,UAAU,mCAAhB,IAAoD8H,EAAIC,iBAR5C,KAgBnBzI,GAA0B,oCAAE,yBAAKU,UAAU,gBAC3CsG,EAAOqB,KAAI,SAACZ,EAAOa,GAAR,OACV,uBAAGhD,KAAMmC,EAAMC,MAAMC,KAAM/B,OAAO,UACrB,UAAVhC,GAAqB,oCAAE,yBAAKlD,UAAU,kBACvC,yBAAK8F,IAAKiB,EAAMG,KAAKc,MAAOhI,UAAU,eAAee,QAAS,kBAAMyE,EAAeuB,EAAMG,KAAKC,YACpF,yBAAK5G,MAAM,aACP,yBAAKP,UAAU,WAeX,yBAAKA,UAAU,0BAAf,YAAiD,uBAAG4E,KAAMmC,EAAMxJ,KAAKyJ,MAAMC,MAAOF,EAAMxJ,KAAKuC,MAA7F,OAA0G,uBAAG8E,KAAK,yBAAR,aAE1G,yBAAK5E,UAAU,YAAYC,MAAO,CAACgE,QAAQ,OAAQgE,SAAS,SACvDlB,EAAMc,KAAKF,KAAI,SAACG,GAAD,OACZ,0BAAM9H,UAAU,mCAAhB,IAAoD8H,EAAIC,cAMvE,SAAV7E,GAAoB,oCAAE,yBAAKlD,UAAU,0BACtC,yBAAK8F,IAAKiB,EAAMG,KAAKc,MAAOhI,UAAU,eAAee,QAAS,kBAAMyE,EAAeuB,EAAMG,KAAKC,YACpF,yBAAK5G,MAAM,aACP,yBAAKP,UAAU,WAgBX,yBAAKA,UAAU,0BAAf,YAAiD,uBAAG4E,KAAMmC,EAAMxJ,KAAKyJ,MAAMC,MAAOF,EAAMxJ,KAAKuC,MAA7F,OAA0G,uBAAG8E,KAAK,yBAAR,aAE1G,yBAAK5E,UAAU,YAAYC,MAAO,CAACgE,QAAQ,OAAQgE,SAAS,SACvDlB,EAAMc,KAAKF,KAAI,SAACG,GAAD,OACZ,0BAAM9H,UAAU,mCAAhB,IAAoD8H,EAAIC,sBAYzFxC,GAAe,kBAAC,EAAD,CAAOA,YAAeA,EAAaC,eAAkBA,MCtO5D,SAAS0C,EAAY5F,GAClC,IAAM/E,EAAO2I,qBAAWtE,GAEtB,OADFzD,QAAQuB,IAAInC,GAENA,EACA,kBAAC,EAAD,CAAUsG,eAAkBvB,EAAM6F,OAAQjF,MAASZ,EAAMY,QAEzD,kBAAC,IAAD,CAAQkF,SAAUlH,IAChB,kBAAC,EAAD,CAAQmH,KAAK,WACb,kBAAC,EAAD,CAAQA,KAAK,MACb,kBAAC,EAAD,CAAeA,KAAO,mB,qiECjBzB,IAAMC,EAAeC,YAAH,KAEP,qBAAGrF,MAAkBsF,QAC1B,qBAAGtF,MAAkBuF,QAMX,qBAAGvF,MAAkBwF,yBAIpB,qBAAGxF,MAAkByF,aAIhC,qBAAGzF,MAAkB0F,WAaX,qBAAG1F,MAAkB2F,eAK/B,qBAAG3F,MAAkB4F,WAId,qBAAG5F,MAAkB6F,eAE5B,qBAAG7F,MAAkB0F,WAIjB,qBAAG1F,MAAkB8F,aAEzB,qBAAG9F,MAAkB+F,gBACrB,qBAAG/F,MAAkB0F,WAKV,qBAAG1F,MAAkB4E,OACjC,qBAAG5E,MAAkB0F,WAMT,qBAAG1F,MAAkByF,aAIrB,qBAAGzF,MAAkByF,aAIhC,qBAAGzF,MAAkBuF,QAMV,qBAAGvF,MAAkByF,aAI5B,qBAAGzF,MAAkB8F,aACzB,qBAAG9F,MAAkB+F,gBAIrB,qBAAG/F,MAAkB+F,gBAEf,qBAAG/F,MAAkB6F,eAC3B,qBAAG7F,MAAkB0F,WAKjB,qBAAG1F,MAAkB8F,aACzB,qBAAG9F,MAAkB0F,WAMrB,qBAAG1F,MAAkB4F,WAIrB,qBAAG5F,MAAkB4F,WAIrB,qBAAG5F,MAAkBgG,WAIrB,qBAAGhG,MAAkB4F,WAIrB,qBAAG5F,MAAkB4F,WAIV,qBAAG5F,MAAkB4F,WCvHhCK,EAAa,CACtBX,KAAK,OACLC,KAAK,UACLW,aAAa,OACbC,WAAW,UACXP,QAAQ,UACRQ,UAAU,UACVL,aAAa,EACbF,YAAY,UACZJ,UAAU,OACVK,UAAU,OACVlB,IAAI,UACJc,QAAQ,UACRxK,MAAM,UACNsK,sBAAsB,UACtBG,YAAY,UACZK,QAAQ,QAGCK,EAAY,CACrBf,KAAK,UACLC,KAAK,UACLW,aAAa,WACbC,WAAW,UACXP,QAAQ,OACRQ,UAAU,UACVL,aAAa,EACbN,UAAU,UACVK,UAAU,UACVD,YAAY,UACZjB,IAAI,UACJc,QAAQ,OACRxK,MAAM,UACNyK,YAAY,UACZH,sBAAsB,UACtBQ,QAAQ,QCNGM,OArBf,WAAe,IAAD,ECNa,WAAO,IAAD,EACH/K,mBAAS,SADN,mBACtByE,EADsB,KACfuG,EADe,OAEmBhL,oBAAS,GAF5B,mBAEtBiL,EAFsB,KAEJC,EAFI,KAIvBC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAASH,GACrCJ,EAASI,IAab,OANArD,qBAAU,WACN,IAAMyD,EAAaH,OAAOC,aAAaG,QAAQ,SAC/CD,EAAaR,EAASQ,GAAcL,EAAQ,SAC5CD,GAAoB,KACrB,IAEI,CAACzG,EAVa,WACG0G,EAAV,UAAV1G,EAA4B,OAAkB,UASrBwG,GDXmBS,GAFtC,mBAEHjH,EAFG,KAEIkH,EAFJ,KAEkBV,EAFlB,KAIJW,EAAsB,UAAVnH,EAAoBiG,EAAaI,EAEnD,OAAIG,EAKA,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAexG,MAASmH,GACpB,oCACA,kBAAC/B,EAAD,MACA,kBAACJ,EAAgB,CAACC,OAAQiC,EAAclH,MAAOA,OARvD,yBAAKjD,MAAO,CAACa,gBAAgB,WEf/BwJ,GAAcC,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DAmCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT9H,MAAK,SAACmI,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpJ,QACf+I,UAAUC,cAAcO,YAC1BnN,QAAQuB,IACN,iHAKEmL,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAGlB9M,QAAQuB,IAAI,sCAGRmL,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BzJ,OAAM,SAACpD,GACND,QAAQC,MAAM,4CAA6CA,MCrEjEqN,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDAnB,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAI5K,GAAwB4I,OAAOU,SAAS5F,MACpDmH,SAAWjC,OAAOU,SAASuB,OACvC,OAGFjC,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAM1J,GAAN,sBAEPoJ,KA0DV,SAAiCM,EAAOC,GAEtCpE,MAAMmE,EAAO,CACXqB,QAAS,CAAE,iBAAkB,YAE5BnJ,MAAK,SAACoJ,GAEL,IAAMC,EAAcD,EAASD,QAAQpO,IAAI,gBAEnB,MAApBqO,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMxJ,MAAK,SAACmI,GAClCA,EAAasB,aAAazJ,MAAK,WAC7BgH,OAAOU,SAASgC,eAKpB7B,GAAgBC,EAAOC,MAG1BrJ,OAAM,WACLrD,QAAQuB,IACN,oEAjFA+M,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMxJ,MAAK,WACjC3E,QAAQuB,IACN,iHAMJiL,GAAgBC,EAAOC,OCnB/BE,K","file":"static/js/main.facb936a.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyCeYtDEVJRW3VAzzFKf3DtN7MDDj8muyEo\",\n//   authDomain: \"my-gallery-app-686f4.firebaseapp.com\",\n//   databaseURL: \"https://my-gallery-app-686f4.firebaseio.com\",\n//   projectId: \"my-gallery-app-686f4\",\n//   storageBucket: \"my-gallery-app-686f4.appspot.com\",\n//   messagingSenderId: \"623036665787\",\n//   appId: \"1:623036665787:web:a68f6112d543d45056fe9e\"\n// };\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCHC-2Qhtr3c3-rhgu9LM9__E5Lk8eOeUc\",\n  authDomain: \"harsh-photogallery.firebaseapp.com\",\n  databaseURL:\n    \"https://harsh-photogallery-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"harsh-photogallery\",\n  storageBucket: \"harsh-photogallery.appspot.com\",\n  messagingSenderId: \"571760654687\",\n  appId: \"1:571760654687:web:e2fe567171b7be35a75eea\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const projectStorage = firebase.storage();\nexport const projectFireStore = firebase.firestore();\nexport const auth = firebase.auth();\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = projectFireStore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async (uid) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await projectFireStore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\n// export { projectStorage, projectFireStore, auth, timestamp }\n","import React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { auth, generateUserDocument } from \"../firebase/config\";\nimport { signInWithGoogle } from \"../firebase/config\";\nimport \"./loginPages.css\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loadingOne, setLoadingOne] = useState(false);\n  const [loadingTwo, setLoadingTwo] = useState(false);\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\",\n  });\n\n  const createUserWithEmailAndPasswordHandler = async (\n    event,\n    email,\n    password\n  ) => {\n    event.preventDefault();\n    console.log(loadingOne);\n    try {\n      setLoadingOne(true);\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      generateUserDocument(user, { displayName });\n      // setLoadingOne(false);\n    } catch (error) {\n      // setLoadingOne(false)\n      setError(\"Error Signing up with email and password\");\n      console.log(error);\n      setLoadingOne(false);\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return (\n    <div className=\"SignUp\">\n      <div className=\"container-fluid\">\n        {isTabletOrMobileDevice && (\n          <>\n            <div\n              style={{ marginTop: \"50px\" }}\n              className=\"col-12 col-sm-6 mx-auto rounded-lg signUpForm\"\n            >\n              <form className=\"px-4 py-4\" noValidate>\n                <div\n                  style={{\n                    fontSize: \"22px\",\n                    fontWeight: \"600\",\n                    letterSpacing: \"1.0\",\n                  }}\n                  className=\"formHeading text-center\"\n                >\n                  PWAgRAM\n                </div>\n                <div class=\"form-group mt-2\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"displayName\"\n                  >\n                    Display Name\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"text\"\n                      placeholder=\"Eg: John Doe\"\n                      name=\"displayName\"\n                      class=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      id=\"displayName\"\n                      type=\"text\"\n                      placeholder=\"Eg: John Doe\"\n                      name=\"displayName\"\n                      class=\"form-control is-invalid\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"exampleInputEmail1\"\n                  >\n                    Email address\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"email\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      name=\"userEmail\"\n                      class=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      type=\"email\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      name=\"userEmail\"\n                      class=\"form-control is-invalid\"\n                      id=\"exampleInputEmail1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"exampleInputPassword1\"\n                  >\n                    Password\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"password\"\n                      class=\"form-control\"\n                      name=\"userPassword\"\n                      placeholder=\"Your Password\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      type=\"password\"\n                      class=\"form-control is-invalid\"\n                      name=\"userPassword\"\n                      placeholder=\"Your Password\"\n                      id=\"exampleInputPassword1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Enter all fields correctly\n                    </div>\n                  )}\n                </div>\n                {!loadingOne && (\n                  <button\n                    id=\"signIn\"\n                    style={{ color: \"#fff\", backgroundColor: \"#388e3c\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={(event) => {\n                      createUserWithEmailAndPasswordHandler(\n                        event,\n                        email,\n                        password\n                      );\n                    }}\n                  >\n                    Sign Up\n                  </button>\n                )}\n                {loadingOne && (\n                  <button\n                    type=\"button\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    style={{ backgroundColor: \"#81c784\", color: \"#fff\" }}\n                    disabled\n                  >\n                    {/* <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n                <div className=\"text-center\">or</div>\n\n                {!loadingTwo && (\n                  <button\n                    id=\"signInWithGoogle\"\n                    type=\"submit\"\n                    style={{ color: \"#fff\", backgroundColor: \"#d32f2f\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={() => {\n                      try {\n                        setLoadingTwo(true);\n                        signInWithGoogle();\n                        // setLoadingTwo(false)\n                      } catch (error) {\n                        console.error(\"Error signing in with Google\", error);\n                        setLoadingTwo(false);\n                      }\n                    }}\n                  >\n                    Sign In with Google\n                    <i class=\"fab fa-google px-2\"></i>\n                  </button>\n                )}\n\n                {loadingTwo && (\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: \"#ef5350\", color: \"#fff\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    {/* <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n\n                <p className=\"text-center my-2\">\n                  Already have an account?{\" \"}\n                  <Link to={process.env.PUBLIC_URL} className=\"text-primary\">\n                    Sign in here\n                  </Link>{\" \"}\n                  <br />{\" \"}\n                </p>\n              </form>\n            </div>\n          </>\n        )}\n\n        {isDesktopOrLaptop && (\n          <>\n            <div\n              style={{ marginTop: \"50px\" }}\n              className=\"col-12 col-sm-6 mx-auto shadow rounded-lg signUpForm\"\n            >\n              <form className=\"px-4 py-4\" noValidate>\n                <div\n                  style={{\n                    fontSize: \"22px\",\n                    fontWeight: \"600\",\n                    letterSpacing: \"1.0\",\n                  }}\n                  className=\"formHeading text-center\"\n                >\n                  PWAgRAM\n                </div>\n                <div class=\"form-group mt-2\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"displayName\"\n                  >\n                    Display Name\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"text\"\n                      placeholder=\"Eg: John Doe\"\n                      name=\"displayName\"\n                      class=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      id=\"displayName\"\n                      type=\"text\"\n                      placeholder=\"Eg: John Doe\"\n                      name=\"displayName\"\n                      class=\"form-control is-invalid\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"exampleInputEmail1\"\n                  >\n                    Email address\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"email\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      name=\"userEmail\"\n                      class=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      type=\"email\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      name=\"userEmail\"\n                      class=\"form-control is-invalid\"\n                      id=\"exampleInputEmail1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontSize: \"15px\", fontWeight: \"400\" }}\n                    for=\"exampleInputPassword1\"\n                  >\n                    Password\n                  </label>\n                  {error === null && (\n                    <input\n                      id=\"custom2\"\n                      type=\"password\"\n                      class=\"form-control\"\n                      name=\"userPassword\"\n                      placeholder=\"Your Password\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <input\n                      type=\"password\"\n                      class=\"form-control is-invalid\"\n                      name=\"userPassword\"\n                      placeholder=\"Your Password\"\n                      id=\"exampleInputPassword1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Enter all fields correctly\n                    </div>\n                  )}\n                </div>\n                {!loadingOne && (\n                  <button\n                    id=\"signIn\"\n                    style={{ color: \"#fff\", backgroundColor: \"#388e3c\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={(event) => {\n                      createUserWithEmailAndPasswordHandler(\n                        event,\n                        email,\n                        password\n                      );\n                    }}\n                  >\n                    Sign Up\n                  </button>\n                )}\n                {loadingOne && (\n                  <button\n                    type=\"button\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    style={{ backgroundColor: \"#81c784\", color: \"#fff\" }}\n                    disabled\n                  >\n                    {/* <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n                <div className=\"text-center\">or</div>\n\n                {!loadingTwo && (\n                  <button\n                    id=\"signInWithGoogle\"\n                    type=\"submit\"\n                    style={{ color: \"#fff\", backgroundColor: \"#d32f2f\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={() => {\n                      try {\n                        setLoadingTwo(true);\n                        signInWithGoogle();\n                        // setLoadingTwo(false)\n                      } catch (error) {\n                        console.error(\"Error signing in with Google\", error);\n                        setLoadingTwo(false);\n                      }\n                    }}\n                  >\n                    Sign In with Google\n                    <i class=\"fab fa-google px-2\"></i>\n                  </button>\n                )}\n\n                {loadingTwo && (\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: \"#ef5350\", color: \"#fff\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    {/* <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n\n                <p className=\"text-center my-2\">\n                  Already have an account?{\" \"}\n                  <Link to={process.env.PUBLIC_URL} className=\"text-primary\">\n                    Sign in here\n                  </Link>{\" \"}\n                  <br />{\" \"}\n                </p>\n              </form>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { auth } from \"../firebase/config\";\nimport { signInWithGoogle } from \"../firebase/config\";\nimport \"./loginPages.css\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [errorEmpty, setErrorEmpty] = useState(null);\n  const [loadingOne, setLoadingOne] = useState(false);\n  const [loadingTwo, setLoadingTwo] = useState(false);\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\",\n  });\n\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\n    event.preventDefault();\n    setLoadingOne(true);\n    auth.signInWithEmailAndPassword(email, password).catch((error) => {\n      setLoadingOne(false);\n      if (email === \"\" || password === \"\") {\n        setErrorEmpty(\"Enter all fields correctly\");\n        console.error(\"Error signing in with password and email\", error);\n      } else {\n        if (errorEmpty) {\n          setErrorEmpty(null);\n        }\n        setError(\"Error signing in with password and email\");\n        console.error(\"Error signing in with password and email\", error);\n      }\n    });\n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <div className=\"SignIn\">\n      <div className=\"container-fluid\">\n        {isTabletOrMobileDevice && (\n          <>\n            <div\n              style={{ marginTop: \"50px\" }}\n              className=\"col-12 col-sm-6 mx-auto rounded-lg signInForm\"\n            >\n              <form className=\"px-4 py-4\" noValidate>\n                <div\n                  style={{\n                    fontSize: \"22px\",\n                    fontWeight: \"600\",\n                    letterSpacing: \"1.0\",\n                  }}\n                  className=\"formHeading text-center\"\n                >\n                  PWAgRAM\n                </div>\n                <div className=\"form-group mt-2\">\n                  <label\n                    style={{ fontWeight: \"400\", fontSize: \"15px\" }}\n                    for=\"exampleInputEmail1\"\n                  >\n                    Email address\n                  </label>\n                  {error === null && errorEmpty === null && (\n                    <input\n                      type=\"email\"\n                      id=\"custom2\"\n                      name=\"userEmail\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      className=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {(error || errorEmpty) && (\n                    <input\n                      type=\"email\"\n                      name=\"userEmail\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      className=\"form-control is-invalid\"\n                      id=\"exampleInputEmail1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontWeight: \"400\", fontSize: \"15px\" }}\n                    for=\"exampleInputPassword1\"\n                  >\n                    Password\n                  </label>\n                  {error === null && errorEmpty === null && (\n                    <input\n                      type=\"password\"\n                      id=\"custom2\"\n                      name=\"userPassword\"\n                      className=\"form-control\"\n                      placeholder=\"Your Password\"\n                      required\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {(error || errorEmpty) && (\n                    <input\n                      type=\"password\"\n                      name=\"userPassword\"\n                      className=\"form-control is-invalid\"\n                      placeholder=\"Your Password\"\n                      id=\"exampleInputPassword1\"\n                      required\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Invalid username or password\n                    </div>\n                  )}\n                  {errorEmpty && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Enter all fields correctly\n                    </div>\n                  )}\n                </div>\n                {!loadingOne && (\n                  <button\n                    id=\"signIn\"\n                    style={{ color: \"#fff\", backgroundColor: \"#388e3c\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={(event) => {\n                      signInWithEmailAndPasswordHandler(event, email, password);\n                    }}\n                  >\n                    Sign In\n                  </button>\n                )}\n                {loadingOne && (\n                  <button\n                    style={{ backgroundColor: \"#66bb6a\", color: \"#fff\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    {/* <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n                <div className=\"text-center\">or</div>\n                {!loadingTwo && (\n                  <button\n                    type=\"submit\"\n                    id=\"signInGoogle\"\n                    style={{ color: \"#fff\", backgroundColor: \"#d32f2f\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={() => {\n                      try {\n                        setLoadingTwo(true);\n                        signInWithGoogle();\n                      } catch (error) {\n                        console.error(\"Error signing in with Google\", error);\n                        setLoadingTwo(false);\n                      }\n                    }}\n                  >\n                    Sign In with Google\n                    <i class=\"fab fa-google px-2\"></i>\n                  </button>\n                )}\n                {loadingTwo && (\n                  <button\n                    style={{ backgroundColor: \"#ef5350\", color: \"#fff\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-grow spinner-grow-sm pr-1\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                    Loading...\n                  </button>\n                )}\n                <p className=\"text-center my-2\">\n                  Don't have an account?{\" \"}\n                  <Link to=\"signUp\" className=\"text-primary\">\n                    Sign up here\n                  </Link>{\" \"}\n                  <br />{\" \"}\n                  <Link to=\"passwordReset\" className=\"text-primary\">\n                    Forgot Password?\n                  </Link>\n                </p>\n              </form>\n            </div>\n          </>\n        )}\n\n        {isDesktopOrLaptop && (\n          <>\n            <div\n              style={{ marginTop: \"50px\" }}\n              className=\"col-12 col-sm-6 mx-auto shadow rounded-lg signInForm\"\n            >\n              <form className=\"px-4 py-4\" noValidate>\n                <div\n                  style={{\n                    fontSize: \"22px\",\n                    fontWeight: \"600\",\n                    letterSpacing: \"1.0\",\n                  }}\n                  className=\"formHeading text-center\"\n                >\n                  PWAgRAM\n                </div>\n                <div className=\"form-group mt-2\">\n                  <label\n                    style={{ fontWeight: \"400\", fontSize: \"15px\" }}\n                    for=\"exampleInputEmail1\"\n                  >\n                    Email address\n                  </label>\n                  {error === null && errorEmpty === null && (\n                    <input\n                      type=\"email\"\n                      id=\"custom2\"\n                      name=\"userEmail\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      className=\"form-control\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {(error || errorEmpty) && (\n                    <input\n                      type=\"email\"\n                      name=\"userEmail\"\n                      placeholder=\"Eg: john.doe@gmail.com\"\n                      className=\"form-control is-invalid\"\n                      id=\"exampleInputEmail1\"\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                </div>\n                <div class=\"form-group mt-4\">\n                  <label\n                    style={{ fontWeight: \"400\", fontSize: \"15px\" }}\n                    for=\"exampleInputPassword1\"\n                  >\n                    Password\n                  </label>\n                  {error === null && errorEmpty === null && (\n                    <input\n                      type=\"password\"\n                      id=\"custom2\"\n                      name=\"userPassword\"\n                      className=\"form-control\"\n                      placeholder=\"Your Password\"\n                      required\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {(error || errorEmpty) && (\n                    <input\n                      type=\"password\"\n                      name=\"userPassword\"\n                      className=\"form-control is-invalid\"\n                      placeholder=\"Your Password\"\n                      id=\"exampleInputPassword1\"\n                      required\n                      onChange={(event) => onChangeHandler(event)}\n                    />\n                  )}\n                  {error && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Invalid username or password\n                    </div>\n                  )}\n                  {errorEmpty && (\n                    <div\n                      id=\"exampleInputPassword1\"\n                      className=\"invalid-feedback\"\n                    >\n                      Enter all fields correctly\n                    </div>\n                  )}\n                </div>\n                {!loadingOne && (\n                  <button\n                    id=\"signIn\"\n                    style={{ color: \"#fff\", backgroundColor: \"#388e3c\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={(event) => {\n                      signInWithEmailAndPasswordHandler(event, email, password);\n                    }}\n                  >\n                    Sign In\n                  </button>\n                )}\n                {loadingOne && (\n                  <button\n                    style={{ backgroundColor: \"#66bb6a\", color: \"#fff\" }}\n                    type=\"submit\"\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    {/* <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> */}\n                    Loading...\n                  </button>\n                )}\n                <div className=\"text-center\">or</div>\n                {!loadingTwo && (\n                  <button\n                    type=\"submit\"\n                    id=\"signInGoogle\"\n                    style={{ color: \"#fff\", backgroundColor: \"#d32f2f\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    onClick={() => {\n                      try {\n                        setLoadingTwo(true);\n                        signInWithGoogle();\n                      } catch (error) {\n                        console.error(\"Error signing in with Google\", error);\n                        setLoadingTwo(false);\n                      }\n                    }}\n                  >\n                    Sign In with Google\n                    <i class=\"fab fa-google px-2\"></i>\n                  </button>\n                )}\n                {loadingTwo && (\n                  <button\n                    style={{ backgroundColor: \"#ef5350\", color: \"#fff\" }}\n                    className=\"btn col-12 mt-2 mb-2\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-grow spinner-grow-sm pr-1\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                    Loading...\n                  </button>\n                )}\n                <p className=\"text-center my-2\">\n                  Don't have an account?{\" \"}\n                  <Link to=\"signUp\" className=\"text-primary\">\n                    Sign up here\n                  </Link>{\" \"}\n                  <br />{\" \"}\n                  <Link to=\"passwordReset\" className=\"text-primary\">\n                    Forgot Password?\n                  </Link>\n                </p>\n              </form>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { Component, createContext } from 'react';\nimport { auth, generateUserDocument } from '../firebase/config';\n\n\nexport const UserContext = createContext({ user: null });\n\n\nclass UserProvider extends Component{\n    state = {\n        user: null\n      }\n\n    \n      componentDidMount = async () => {\n        auth.onAuthStateChanged(async userAuth => {\n          const user = await generateUserDocument(userAuth);\n          this.setState({ user });\n        });\n      };\n\n    render(){\n        return(\n        <UserContext.Provider value={this.state.user}>\n            {this.props.children}\n          </UserContext.Provider>\n        )\n    }\n}\n\nexport default UserProvider;\n","import React, { useState, useContext } from 'react';\nimport { Link } from '@reach/router';\nimport { auth } from '../firebase/config';\nimport { UserContext } from '../providers/userProvider';\nimport { useMediaQuery } from 'react-responsive'\nimport \"./loginPages.css\";\n\n\nconst PasswordReset = () =>{\n\n    const [email, setEmail] = useState(\"\");\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n    const [ error, setError ] = useState(null);\n    const [ errorEmpty, setErrorEmpty ] = useState(null);\n\n    const isDesktopOrLaptop = useMediaQuery({\n        query: '(min-device-width: 1224px)'\n      })\n    \n      const isTabletOrMobileDevice = useMediaQuery({\n        query: '(max-device-width: 1224px)'\n      })\n\n    const onChangeHandler = event => {\n        const { name, value } = event.currentTarget;\n    \n        if (name === \"userEmail\") {\n          setEmail(value);\n        }\n      };\n    \n    const sendResetEmail = event => {\n        event.preventDefault();\n        auth\n        .sendPasswordResetEmail(email)\n        .then(() => {\n            setEmailHasBeenSent(true);\n            setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\n        })\n        .catch(() => {\n            setError(\"Error resetting password\");\n        });\n    } \n    \n\n    return(\n        <div className=\"PasswordReset\">\n            <div className=\"container-fluid\">\n                {isTabletOrMobileDevice && <><div style={{marginTop:'50px'}} className =\"col-12 col-sm-6 mx-auto rounded-lg signInForm\">\n                    <form className=\"px-4 py-4\" noValidate>\n                    <div style={{fontSize:'22px',fontWeight:'600'}} className=\"formHeading text-center\">Reset your Password</div>\n                        <div className=\"form-group mt-4\">\n                            <label style={{fontWeight:'400', fontSize:'15px'}} for=\"exampleInputEmail1\">Email</label>\n                            {(error===null&&errorEmpty===null) && <input type=\"email\" id=\"custom2\" name=\"userEmail\" placeholder=\"Enter your email address\" className=\"form-control\" onChange={event => onChangeHandler(event)}/>}\n                            {(error || errorEmpty) && <input type=\"email\" name=\"userEmail\" placeholder=\"Eg: john.doe@gmail.com\" className=\"form-control is-invalid\" id=\"exampleInputEmail1\" onChange={event => onChangeHandler(event)}/>}\n                        </div>\n                        <button id=\"passwordresetbutton\" style={{color:\"#fff\", backgroundColor:'#2196f3'}} type=\"submit\" className=\"btn col-12 mt-2 mb-2\" onClick={event => {sendResetEmail(event);}}>Send me a reset link</button>\n                        <p className=\"text-center my-2\">\n                            <Link to={process.env.PUBLIC_URL} className=\"text-primary\">\n                            &larr; back to sign in page\n                            </Link>{\" \"}\n                        </p>\n                        </form>\n                    </div></>}\n                    {isDesktopOrLaptop && <><div style={{marginTop:'50px'}} className =\"col-12 col-sm-6 mx-auto shadow rounded-lg signInForm\">\n                    <form className=\"px-4 py-4\" noValidate>\n                    <div style={{fontSize:'22px',fontWeight:'600'}} className=\"formHeading text-center\">Reset your Password</div>\n                        <div className=\"form-group mt-4\">\n                            <label style={{fontWeight:'400', fontSize:'15px'}} for=\"exampleInputEmail1\">Email</label>\n                            {(error===null&&errorEmpty===null) && <input type=\"email\" id=\"custom2\" name=\"userEmail\" placeholder=\"Enter your email address\" className=\"form-control\" onChange={event => onChangeHandler(event)}/>}\n                            {(error || errorEmpty) && <input type=\"email\" name=\"userEmail\" placeholder=\"Eg: john.doe@gmail.com\" className=\"form-control is-invalid\" id=\"exampleInputEmail1\" onChange={event => onChangeHandler(event)}/>}\n                        </div>\n                        <button id=\"passwordresetbutton\" style={{color:\"#fff\", backgroundColor:'#2196f3'}} type=\"submit\" className=\"btn col-12 mt-2 mb-2\" onClick={event => {sendResetEmail(event);}}>Send me a reset link</button>\n                        <p className=\"text-center my-2\">\n                            <Link to={process.env.PUBLIC_URL} className=\"text-primary\">\n                            &larr; back to sign in page\n                            </Link>{\" \"}\n                        </p>\n                        </form>\n                    </div></>}\n                    {emailHasBeenSent && <div className=\"d-flex justify-content-center\">\n                        <div class=\"alert alert-success col-md-6 col-sm-12 mt-4\" role=\"alert\">\n                        An email has been sent to you!\n                        </div>\n                </div>}\n                </div>\n            </div>\n        )\n    }\n\n    export default PasswordReset","import React, { useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Brightness6TwoToneIcon from \"@material-ui/icons/Brightness6TwoTone\";\nimport Brightness2TwoToneIcon from \"@material-ui/icons/Brightness2TwoTone\";\nimport { IconButton, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { deepPurple, pink } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  pink: {\n    color: theme.palette.getContrastText(pink[300]),\n    backgroundColor: pink[300],\n    // marginTop:theme.spacing(3)\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n\nexport default function Title({ userName, auth, darkModeToggle, theme }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n\n  const changeTheme = () => {\n    darkModeToggle();\n  };\n\n  const signOut = () => {\n    console.log(\"Signing out\");\n    if (userName) {\n      auth.signOut();\n    }\n  };\n\n  return (\n    <div className=\"title\">\n      <div className=\"navbar\">\n        <div className=\"container-fluid\">\n          <h1>PWAgRAM</h1>\n          <div style={{ marginTop: \"-5px\" }} className=\"header-icons\">\n            {/* <div className=\"icon\"><i class=\"fab fa-github\"></i></div>\n                        <div className=\"icon\"><i class=\"fab fa-twitter\"></i></div>\n                        <div className=\"icon\"><i class=\"fab fa-instagram\"></i></div> */}\n            <div style={{ marginBottom: \"-7px\" }}>\n              {/* <label class=\"switch\">\n                                <input type=\"checkbox\" checked={theme===\"dark\"} onChange={() => changeTheme()}/>\n                                <span class=\"slider round\"></span>\n                            </label> */}\n              <div\n                style={{\n                  position: \"relative\",\n                  display: \"inline-block\",\n                  marginTop: \"-5px\",\n                }}\n              >\n                <IconButton\n                  style={{ border: \"none\", outline: \"none\" }}\n                  onClick={() => changeTheme()}\n                >\n                  {theme === \"dark\" && (\n                    <Brightness6TwoToneIcon\n                      fontSize=\"large\"\n                      style={{ color: \"#fff\" }}\n                    />\n                  )}\n                  {theme === \"light\" && (\n                    <Brightness2TwoToneIcon\n                      fontSize=\"large\"\n                      style={{ color: \"#f48fb1\" }}\n                    />\n                  )}\n                </IconButton>\n              </div>\n            </div>\n            <div style={{ marginBottom: \"-2px\" }}>\n              <a\n                className=\"nav-link dropdown\"\n                id=\"navbarDropdownMenuLink\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                style={{ fontSize: \"3rem;\" }}\n              >\n                {theme === \"light\" && (\n                  <Avatar className={classes.pink} alt={userName}>\n                    {userName[0].toUpperCase()}\n                  </Avatar>\n                )}\n                {theme === \"dark\" && (\n                  <Avatar className={classes.purple} alt={userName}>\n                    {userName[0].toUpperCase()}\n                  </Avatar>\n                )}\n              </a>\n              <div\n                class=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                {/* <a class=\"dropdown-item\" href=\"#\">Your Collection</a> */}\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  onClick={() => {\n                    auth.signOut();\n                  }}\n                >\n                  Sign Out\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {userName !== null && <h2>Welcome, {userName}</h2>}\n      {userName === null && <h2>Welcome</h2>}\n      <p>Search free high-resolution photos</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst Search = ({props}) => {\n\n    const handleChange = (e) => {\n        if(e.key===\"Enter\" && e.target.value!=\"\"){\n            props.search()\n        }\n    }\n\n    return(\n        <div style={{marginBottom:'20px'}} className=\"col-9 col-md-6 mx-auto\">\n            <input \n                id=\"custom\"\n                className=\"form-control form-control-lg\" \n                type=\"text\" \n                placeholder=\"Cat pictures UwU\" \n                value={props.term}\n                onChange={e => props.setTerm(e.target.value)}\n                onKeyPress={handleChange}\n                />\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\n    const handleClick = (e) => {\n        setSelectedImg(null)\n    }    \n\n   return(\n    <motion.div className=\"backdrop\" onClick={handleClick}\n        initial={{opacity:0}}\n        animate={{opacity:1}}\n        >\n        <motion.img src={selectedImg} alt=\"enlarged pic\"\n        initial={{y:'-100vh'}}\n        animate={{y:0}}\n        />\n    </motion.div>\n   )\n}\n\nexport default Modal;","import React, { useState, useEffect, useContext } from 'react';\nimport Title from './title';\nimport Search from'./search';\nimport Modal from './modal';\nimport { UserContext } from '../providers/userProvider';\nimport { auth } from '../firebase/config';\nimport '../index.css';\nimport { useMediaQuery } from 'react-responsive'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { motion } from 'framer-motion';\nimport { IconButton } from '@material-ui/core';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Button from '@material-ui/core/Button';\n\n\n\n// const url= 'https://pixabay.com/api/'\nconst url = 'https://api.unsplash.com/' //UNSPLASH\n\n\nfunction HomePage({ darkModeToggle, theme }) {\n\n  const user = useContext(UserContext);\n  // console.log(user)\n  const { photoURL, displayName, email } = user;\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: '(max-device-width: 1224px)'\n  })\n\n\n  // const key = \"19529048-a0442e53b19277dfa094f6e1f\"\n  const key = \"1lBCHcgi0-khQZwmixmCYbz6eB0YI4hC6Nhfvw6UDkI\";\n\n  const [page, setPage] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [selectedImg, setSelectedImg] = useState(null)\n  const [error, setError] = useState(false)\n  const [images, setImages] = useState([])\n  const [term, setTerm] = useState('')\n\n  const fetchImages = () => {\n    setPage(page+1)\n    if(term === ''){\n      setLoading(true)\n      fetch(`${url}/search/photos?client_id=${key}&query=Cats&page=${page}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setImages(images.concat(data.results))\n        setLoading(false)\n      })\n    }\n    else{\n      setLoading(true)\n      fetch(`${url}search/photos?client_id=${key}&query=${term}&page=${page}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setImages(images.concat(data.results))\n        setLoading(false)\n      })\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(`${url}/search/photos?client_id=${key}&query=Cats`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        // let copy = createCopy(data.results)\n        setImages(data.results)\n        setLoading(false)\n      })\n      .then(err => {\n        console.log(err)\n        //setError(true)\n        setLoading(false)\n      })\n  }, [])\n\n  const search = async() => {\n    setPage(1)\n    try{\n      setLoading(true)\n      let res = await fetch(`${url}/search/photos?client_id=${key}&query=${term}`)\n      let data = await res.json()\n      console.log(data)\n      setImages(data.results)\n      setLoading(false)\n    }\n    catch(error){\n      // setError(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n  }\n\n  // const createCopy = (data) =>{\n  //   return data.map((item) => ({\n  //     ...item,\n  //     selected: false       \n  // }));\n  // }\n\n  const Image = ({image})  => {\n    return(\n      <div className=\"content\">\n         <a href={image.links.html} target=\"_blank\">\n           <div className=\"content-overlay\"></div>\n           <img className=\"content-image\" src={image.urls.regular}/>\n           <div class=\"content-details fadeIn-bottom\">\n            {/* <h3 class=\"content-title\">This is a title</h3> */}\n            <p class=\"content-text\">Photo by {image.user.name} on Unsplash</p>\n          </div>\n         </a>\n      </div>\n    )\n  }\n\n  const download = async (id) => {\n    console.log('hello')\n    let url = \"https://api.unsplash.com/photos/?client_id=\"+process.env.REACT_APP_UNSPLASH_API_KEY+\"&\"+id+\"/download\"\n    let res = await fetch(url)\n    let response = await res.json()\n    console.log(response)\n};\n\n  return (\n    <div className=\"app\">\n      <Title userName = {displayName} auth={auth} darkModeToggle = {darkModeToggle} theme={theme}/>\n      <Search props={{\n        term: term,\n        search: search,\n        setTerm: setTerm\n      }}/>\n      {error && <div className=\"error\">Error trying to load images</div>}\n      {/* {images && <GridImages photos={images} setSelectedImg = {setSelectedImg}/>} */}\n      \n        <InfiniteScroll\n        dataLength = {images.length}\n        next = {fetchImages}\n        hasMore = {true}\n        loader = {\n          <div></div>\n        }\n        >\n          <div className=\"container-fluid mt-4\" style={{overflow:'auto'}}>\n        \n       { isDesktopOrLaptop && <> <div className=\"card-columns\">\n          {images.map((image, index) => (\n            <a href={image.links.html} target=\"_blank\">\n              <figure class=\"figure\">\n              {/* <img src={image.urls.regular} class=\"figure-img img-fluid rounded\" alt=\"...\"/> */}\n              <Image image={image}/>\n              {image.tags && <figcaption class=\"figure-caption d-flex flex-row justify-content-center flex-wrap mt-1\">\n                {image.tags.map((tag) => (\n                  <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                ))}\n              </figcaption>}\n            </figure>\n            </a>\n          ))}\n          </div> </>}\n\n          {isTabletOrMobileDevice && <><div className=\"card-columns\">\n          {images.map((image, index) => (\n            <a href={image.links.html} target=\"_blank\">\n              {theme === \"light\" && <><div className=\"card cardTheme\">\n              <img src={image.urls.small} className=\"card-img-top\" onClick={() => setSelectedImg(image.urls.regular)}/>\n                        <div class=\"card-body\">\n                            <div className=\"action\">\n                            {/* <IconButton style={{color:'#f50057', fontSize:'18px'}} onClick={() => {}}>\n                                <FavoriteIcon/>\n                            </IconButton> */}\n                             {/* <IconButton size=\"medium\" style={{color:'#444', fontSize:'18px', border:'0.7px solid #444'}} onClick={() => {}}>\n                                  <FavoriteBorderIcon/>\n                              </IconButton> */}\n                                        {/* <a href={image.links.download+ \"?force=true\"} className=\"btn btn-sm btn-light border-0 rounded-lg\" onClick={() => download(image.id)}>\n                                            <i className=\"fas fa-arrow-down custom-icon\" style={{color:\"#689f38\"}}></i> \n                                        </a> */}\n                            {/* <Button size=\"small\" style={{color:'#444', fontWeight:'600', border:'0.7px solid #444'}}>\n                                DOWNLOAD\n                            </Button> */}\n                          \n                                </div>\n                                <div className=\"photo-header mt-1 mb-1\">Photo by <a href={image.user.links.html}>{image.user.name}</a> on <a href=\"https://unsplash.com/\">Unsplash</a></div>\n                                {/* {item.description && <p class=\"card-text\">{item.description}</p>} */}\n                                <div className=\"tags mt-2\" style={{display:'flex', flexWrap:'wrap'}}>\n                                    {image.tags.map((tag) => (\n                                        <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                                    ))}\n                                </div>\n                        </div>\n              </div></>}\n              \n              {theme === \"dark\" && <><div className=\"card rounded cardTheme\">\n              <img src={image.urls.small} className=\"card-img-top\" onClick={() => setSelectedImg(image.urls.regular)}/>\n                        <div class=\"card-body\">\n                            <div className=\"action\">\n                                    \n                              {/* <IconButton style={{color:'#f50057', fontSize:'18px'}} onClick={() => {}}>\n                                  <FavoriteIcon/>\n                              </IconButton> */}\n\n                              {/* <IconButton size=\"medium\" style={{color:'#fff', fontSize:'18px', border:'0.7px solid #fff'}} onClick={() => {}}>\n                                  <FavoriteBorderIcon/>\n                              </IconButton> */}\n                                        {/* <a href={image.links.download+ \"?force=true\"} className=\"btn btn-sm btn-light border-0 rounded-lg\" onClick={() => download(image.id)}>\n                                            <i className=\"fas fa-arrow-down custom-icon\" style={{color:\"#689f38\"}}></i> \n                                        </a> */}\n                              {/* <Button size=\"small\" style={{color:'#fff', fontWeight:'600', border:'0.7px solid #fff'}}>\n                                DOWNLOAD\n                              </Button> */}\n                                </div>\n                                <div className=\"photo-header mt-1 mb-1\">Photo by <a href={image.user.links.html}>{image.user.name}</a> on <a href=\"https://unsplash.com/\">Unsplash</a></div>\n                                {/* {item.description && <p class=\"card-text\">{item.description}</p>} */}\n                                <div className=\"tags mt-2\" style={{display:'flex', flexWrap:'wrap'}}>\n                                    {image.tags.map((tag) => (\n                                        <span className='tag px-3 py-1 mr-2 rounded-pill'>#{tag.title}</span>\n                                    ))}\n                                </div>\n                        </div>\n              </div></>}\n              \n            </a>\n          ))}\n          </div></>}\n        \n      </div>\n      </InfiniteScroll>\n      {selectedImg && <Modal selectedImg = {selectedImg} setSelectedImg = {setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { useContext } from 'react';\nimport { Router } from \"@reach/router\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport PasswordReset from \"./PasswordReset\";\nimport HomePage from './homePage';\nimport { UserContext } from '../providers/userProvider';\n\nexport default function Application(props){\n  const user = useContext(UserContext);\n  console.log(user)\n    return(\n        user ?\n        <HomePage darkModeToggle = {props.toggle} theme = {props.theme}/>\n        :\n        <Router basepath={process.env.PUBLIC_URL}>\n          <SignUp path=\"signUp\" />\n          <SignIn path=\"/\" />\n          <PasswordReset path = \"passwordReset\" />\n        </Router>\n    )\n}","import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Raleway, sans-serif;\n    transition: all 0.50s linear;\n  }\n\n  .SignIn #signInGoogle, .SignUp #signInWithGoogle {\n    backgroundColor: ${({ theme }) => theme.signInWithGoogleColor};\n  }\n\n  .dropdown-menu{\n    background-color: ${({ theme }) => theme.formColor}  \n}\n\n  .dropdown-item{\n    color: ${({ theme }) => theme.tagText}\n}\n\n\n  .SignIn #signInGoogle:hover, .SignUp #signInWithGoogle:hover{\n    background-color: #e53935;\n    }\n  \n  .SignIn #signIn:hover, .SignUp #signIn:hover {\n    background-color: #4caf50;\n    }\n\n  .SignIn #signIn, .SignUp #signIn {\n    backgroundColor: ${({ theme }) => theme.signInColor};\n  }\n\n  .navbar{\n    font-family: 'Open Sans', sans-serif;\n    color: ${({ theme }) => theme.primary};\n  }\n\n  #custom:focus {   \n    border-color: ${({ theme }) => theme.borderColor};\n    box-shadow: 0 0 0 0.0rem rgb(255,192,203);\n    color: ${({ theme }) => theme.tagText}\n  }\n\n  #custom{\n    background:${({ theme }) => theme.searchBar};\n    border-radius: 25px;\n    border:${({ theme }) => theme.searchBorder};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n  .tag {\n    display: inline block;\n    background-color: ${({ theme }) => theme.tag};\n    color:${({ theme }) => theme.tagText};\n    font-weight: 500;\n    font-size: 12px;\n  }\n\n  .signUpForm {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .cardTheme {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .cardTheme .photo-header, .cardTheme a{\n    color: ${({ theme }) => theme.text};\n    font-family: Raleway, sans-serif;\n    size\n  }\n\n  .signInForm {\n    background-color: ${({ theme }) => theme.formColor}\n  }\n\n  .SignUp #custom2, .SignIn #custom2, .PasswordReset #custom2{\n    background:${({ theme }) => theme.searchBar};\n    border:${({ theme }) => theme.searchBorder};\n  }\n\n  .SignUp #custom2:focus, .SignIn #custom2:focus, .PasswordReset #custom2:focus{\n    border:${({ theme }) => theme.searchBorder};\n    box-shadow: 0 0 0 0.0rem rgb(255,192,203);\n    border-color:${({ theme }) => theme.borderColor};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n\n  .form-control.is-invalid, .was-validated .form-control:invalid {\n    background:${({ theme }) => theme.searchBar};\n    color: ${({ theme }) => theme.tagText}\n  }\n\n\n  \n  #navbarDropdownMenuLink{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .SignIn .formHeading, .SignUp .formHeading{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .PasswordReset .formHeading{\n    color: ${({ theme }) => theme.heading};\n  }\n\n  .fa-user{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  title h1{\n    color: ${({ theme }) => theme.primary};\n  }\n\n  .caret{\n    background-color: ${({ theme }) => theme.primary};\n  }\n  `\n","export const lightTheme = {\n    body:'#FFF',\n    text:'#4e4e4e',\n    toggleBorder:'#FFF',\n    background:'#4e4e4e',\n    primary:'#f48fb1',\n    secondary:'#4E4E4E',\n    searchBorder:1,\n    borderColor:'#ced4da',\n    formColor:'#FFF',\n    searchBar:'#FFF',\n    tag:'#eeeeee',\n    tagText:'#616161',\n    error:'#ff4a4a',\n    signInWithGoogleColor:'#ef5350',\n    signInColor:'#66bb6a',\n    heading:'#000'\n}\n\nexport const darkTheme = {\n    body:'#010409',\n    text:'#fafafa',\n    toggleBorder:'#6DB8096',\n    background:'#fafafa',\n    primary:'#FFF',\n    secondary:'#2c2e31',\n    searchBorder:0,\n    formColor:'#212121',\n    searchBar:'#2c2e31',\n    borderColor:'#2c2e31',\n    tag:'#2c2e32',\n    tagText:'#FFF',\n    error:'#f85149',\n    signInColor:'#388e3c',\n    signInWithGoogleColor:'#d32f2f',\n    heading:'#fff'\n}","import React, {useState, useEffect} from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport  {useDarkMode} from \"./components/useDarkMode\"\nimport Application from './components/Application';\nimport { GlobalStyles } from './components/globalStyles';\nimport { lightTheme, darkTheme } from './components/Theme';\nimport UserProvider from './providers/userProvider';\n\nfunction App(){\n\n    const [theme, themeToggler, mountedComponent] = useDarkMode();\n\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    if(!mountedComponent) return(\n        <div style={{backgroundColor:'#000'}}></div>\n    );\n\n    return(\n        <UserProvider>\n            <ThemeProvider theme = {themeMode}>\n                <>\n                <GlobalStyles/>\n                <Application {...{toggle: themeToggler, theme: theme}}/>\n                </>\n            </ThemeProvider>\n        </UserProvider>\n    )\n}\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    }\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme ? setTheme(localTheme) : setMode('light')\n        setMountedComponent(true)\n    }, []);\n\n    return [theme, themeToggler, mountedComponent];\n\n}","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}